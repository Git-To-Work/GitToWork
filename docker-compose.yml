version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    command: >
      --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    volumes:
      - db_data:/var/lib/mysql
      - ./backend/src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/src/main/resources/db/init_grants.sql:/docker-entrypoint-initdb.d/init_grants.sql
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  mongodb:
    image: mongo:5
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - mongodb
      - redis
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      app-network:
        aliases:
          - backend
      s12p21c103_app-network:
        aliases:
          - backend

  fastapi:
    container_name: fastapi
    build:
      context: ./bigdata
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      APP_NAME: "gittowork"
      DEBUG: "true"
    depends_on:
      - mysql
      - mongodb
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    networks:
      app-network:
        aliases:
          - fastapi
      s12p21c103_app-network:
        aliases:
          - fastapi

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/nginx/ssl:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - backend
      - fastapi
      - mysql
      - redis
      - mongodb
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  s12p21c103_app-network:
    external: true

volumes:
  db_data:
  mongo_data:

